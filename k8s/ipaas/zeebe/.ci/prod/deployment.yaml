kind: ConfigMap
metadata:
  name: zeebe-config
  namespace: mixlink
apiVersion: v1
data:
  startup.sh: |
    #!/bin/bash -xeu

    configFile=/usr/local/zeebe/conf/zeebe.cfg.toml
    export ZEEBE_HOST=$(hostname -f)
    export ZEEBE_NODE_ID="${HOSTNAME##*-}"

    # We need to specify all brokers as contact points for partition healing to work correctly
    # https://github.com/zeebe-io/zeebe/issues/2684
    ZEEBE_CONTACT_POINTS=${HOSTNAME::-1}0.$(hostname -d):26502
    for (( i=1; i<$ZEEBE_CLUSTER_SIZE; i++ ))
    do
        ZEEBE_CONTACT_POINTS="${ZEEBE_CONTACT_POINTS},${HOSTNAME::-1}$i.$(hostname -d):26502"
    done
    export ZEEBE_CONTACT_POINTS="${ZEEBE_CONTACT_POINTS}"

    exec /usr/local/zeebe/bin/broker
  application.yaml: |
    zeebe:
      broker:
        gateway:
          # Enable the embedded gateway to start on broker startup.
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_GATEWAY_ENABLE.
          enable: true

          network:
            # Sets the port the embedded gateway binds to.
            # This setting can also be overridden using the environment variable ZEEBE_BROKER_GATEWAY_NETWORK_PORT.
            port: 26500

          security:
            # Enables TLS authentication between clients and the gateway
            # This setting can also be overridden using the environment variable ZEEBE_BROKER_GATEWAY_SECURITY_ENABLED.
            enabled: false

        network:
          # Controls the default host the broker should bind to. Can be overwritten on a
          # per binding basis for client, management and replication
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_NETWORK_HOST.
          host: 0.0.0.0

        data:
          # Specify a list of directories in which data is stored.
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DIRECTORIES.
          directories: [data]
          # The size of data log segment files.
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_LOGSEGMENTSIZE.
          logSegmentSize: 512MB
          # How often we take snapshots of streams (time unit)
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_SNAPSHOTPERIOD.
          snapshotPeriod: 15m

        cluster:
          # Specifies the Zeebe cluster size.
          # This can also be overridden using the environment variable ZEEBE_BROKER_CLUSTER_CLUSTERSIZE.
          clusterSize: 1
          # Controls the replication factor, which defines the count of replicas per partition.
          # This can also be overridden using the environment variable ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR.
          replicationFactor: 1
          # Controls the number of partitions, which should exist in the cluster.
          # This can also be overridden using the environment variable ZEEBE_BROKER_CLUSTER_PARTITIONSCOUNT.
          partitionsCount: 1

        threads:
          # Controls the number of non-blocking CPU threads to be used.
          # WARNING: You should never specify a value that is larger than the number of physical cores
          # available. Good practice is to leave 1-2 cores for ioThreads and the operating
          # system (it has to run somewhere). For example, when running Zeebe on a machine
          # which has 4 cores, a good value would be 2.
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_THREADS_CPUTHREADCOUNT
          cpuThreadCount: 2
          # Controls the number of io threads to be used.
          # This setting can also be overridden using the environment variable ZEEBE_BROKER_THREADS_IOTHREADCOUNT
          ioThreadCount: 2
        # Elasticsearch Exporter ----------
        # An example configuration for the elasticsearch exporter:
        #
        # These setting can also be overridden using the environment variables "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_..."
        #
        exporters:
          elasticsearch:
            className: io.camunda.zeebe.exporter.ElasticsearchExporter

            args:
              url: http://172.30.15.9:9200

              bulk:
                delay: 5
                size: 1000

              # authentication:
              #   username: elastic
              #   password: changeme

              index:
                prefix: zeebe-record
                createTemplate: true

                command: false
                event: true
                rejection: false

                deployment: true
                error: true
                incident: true
                job: true
                jobBatch: false
                message: false
                messageSubscription: false
                variable: true
                variableDocument: true
                workflowInstance: true
                workflowInstanceCreation: false
                workflowInstanceSubscription: false

                ignoreVariablesAbove: 32677

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zeebe
  namespace: mixlink
spec:
  selector:
    matchLabels:
      app: zeebe
  serviceName: zeebe
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zeebe
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: zeebe
          image: registry.cn-hangzhou.aliyuncs.com/mixlink/zeebe:1.1.0
          env:
            - name: ZEEBE_LOG_LEVEL
              value: debug
            - name: ZEEBE_PARTITIONS_COUNT
              value: "1"
            - name: ZEEBE_CLUSTER_SIZE
              value: "1"
            - name: ZEEBE_REPLICATION_FACTOR
              value: "1"
            - name: JAVA_TOOL_OPTIONS
              value: |
                -Xms1024m
                -Xmx1024m
          ports:
            - containerPort: 26500
              name: gateway
            - containerPort: 26501
              name: command
            - containerPort: 26502
              name: internal
          readinessProbe:
            httpGet:
              path: /ready
              port: 9600
            initialDelaySeconds: 20
            periodSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - name: config
              mountPath: /usr/local/zeebe/config/application.yaml
              subPath: application.yaml
            - name: config
              mountPath: /usr/local/bin/startup.sh
              subPath: startup.sh
            - name: data
              mountPath: /usr/local/zeebe/data
      volumes:
        - name: config
          configMap:
            name: zeebe-config
            defaultMode: 0744
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: zeebe-regional
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: zeebe
  namespace: mixlink
  labels:
    app: zeebe
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 26500
      protocol: TCP
      name: gateway
    - port: 26501
      protocol: TCP
      name: command
    - port: 26502
      protocol: TCP
      name: internal
  selector:
    app: zeebe
